// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/storage.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"
	dto "team-task/internal/dto"

	gomock "github.com/golang/mock/gomock"
)

// MockUserGrade is a mock of UserGrade interface.
type MockUserGrade struct {
	ctrl     *gomock.Controller
	recorder *MockUserGradeMockRecorder
}

// MockUserGradeMockRecorder is the mock recorder for MockUserGrade.
type MockUserGradeMockRecorder struct {
	mock *MockUserGrade
}

// NewMockUserGrade creates a new mock instance.
func NewMockUserGrade(ctrl *gomock.Controller) *MockUserGrade {
	mock := &MockUserGrade{ctrl: ctrl}
	mock.recorder = &MockUserGradeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserGrade) EXPECT() *MockUserGradeMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockUserGrade) Get(userID string) (dto.UserGrade, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", userID)
	ret0, _ := ret[0].(dto.UserGrade)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUserGradeMockRecorder) Get(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUserGrade)(nil).Get), userID)
}

// GetAll mocks base method.
func (m *MockUserGrade) GetAll() map[string]dto.UserGrade {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(map[string]dto.UserGrade)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockUserGradeMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockUserGrade)(nil).GetAll))
}

// Set mocks base method.
func (m *MockUserGrade) Set(userGrade dto.UserGrade) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", userGrade)
}

// Set indicates an expected call of Set.
func (mr *MockUserGradeMockRecorder) Set(userGrade interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockUserGrade)(nil).Set), userGrade)
}
